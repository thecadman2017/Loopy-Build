


Filter changed files
  2  
firmware.md
# How to Program Loopy


In order to program Loopy, you need:
- an atmega328(p) chip
- an AVR programmer (an inexhpensive USBasp is perfectly fine, like the one [here](https://www.bitsbox.co.uk/index.php?main_page=product_info&cPath=140_161_163&products_id=1233))
- a 10 to 6 pin adapter if your programmer is not supplied with one, like the one [here](https://www.bitsbox.co.uk/index.php?main_page=product_info&cPath=140_161_163&products_id=2848)
- [avrdude](https://www.nongnu.org/avrdude/) correctly installed on your computer (installation are dependent on your OS of choice -- if you are on Mac, the easier way is to use [brew](https://formulae.brew.sh/formula/avrdude))
Once your computer is setup, you need to run three commands on your terminal.
The first command is mandatory to initialise the chip, and needs to be performed only on a blank chip. 
Once the initialisation is completed, the chip will work only if correctly connected to an oscillator: I strongly suggest to use the 6 pin header on the PCB to install the firmware.
## Fuses
If your chip has already a working copy of the firmware, you can skip this step. Otherwise, run:
```
avrdude -c usbasp -p atmega328p -B16 -U lfuse:w:0xFF:m -U hfuse:w:0xD9:m -U efuse:w:0xFF:m -U lock:w:0xFF:m
```
## Firwmare
The second command will upload the firmware on the chip:
```
avrdude -c usbasp -p atmega328p -U flash:w:<hex file location>
```

## EEPROM

The third command will setup the EEPROM, where the chip stores presets. Upload of the firmware will reset this location of memory: the following command will restore default values.
The third command will setup the EEPROM, the portion of memory where the chip stores presets and config. The upload of the firmware will reset this location of memory, while running the following command will restore default values:

```
avrdude -c usbasp -p atmega328p -U eeprom:w:loopy.eep
```
  15  
howto.md
@@ -37,6 +37,8 @@ All the jacks are mounted on the two boards, so I suggest to work your way up in

- **you should now be able to power up your project**, and check the activation of the all the relays, as well that all the voltages are correct (especially in and out of the voltage regulator)

I have uploaded a [small video on YouTube](https://www.youtube.com/watch?v=tt-ZAocfp6Q) that shows how the board should look like at this stage.

## Step 3: Finish it up & LED installation

If you got at this stage of the build, you are ready for the tricky part: the installation of the LED.
@@ -51,10 +53,10 @@ The following steps should get you over the finishing line:
- lock all the leads in place using small pieces of masking tapes, but don't bend the leads: this will allow you to rotate the board into its place without dropping all the LED out of the board
- tight the nut of a few jack socket so that the main board is in place
- one by one, release LED from their masking tape and make sure they finds the right hole on the front panel: might take a bit of time, so be patient
- you should be able now to power up the project and do another rundown before soldering all the LED
- if you are happy everything is working as expecteed, you can start soldering one by one all the LED and remove the excess for each lead (shouldn't be much)
- you should be able now to power up the project and do another rundown before soldering all the LED (I strongly suggestt you do this!)
- if you are happy everything is working as expected, you can start soldering one by one all the LED and remove the excess for each lead (shouldn't be much)
- tight all the sockets
- job done
- job done, enjoy your programmable looper! :-)

![Looper Midi Socket](./img/DSCF1541.jpg "Looper Midi Socket")
![Looper](./img/DSCF1542.jpg "Looper")
@@ -68,13 +70,16 @@ The following steps should get you over the finishing line:
| --- | --- |
| v1 | Original version, burnt into the first batch of chips |
| v1b | Use MIDI out as MIDI Thru; Better timing in button debouncing |
| v2(a, b) | MIDI Control Change + MIDI Control Panel |

#### Firmware Compatibility Matrix

| Firmware \ PCB  | PCB.20200806 | PCB.20201125 |
| --- | --- | --- |
| v1 | Yes | Yes |
| v1b | Yes | Yes |
| v2a | Yes | Yes |
| v2b | Yes | Yes |

#### Relays

@@ -91,7 +96,9 @@ Some of these models are discontinued, but any other signal relay with the same

Any 5mm LED work in this project, but you want to be careful with the type you use and the resistors you couple with it. 

I have personally used 400mcd LED like the one [here](https://www.switchelectronics.co.uk/blue-5mm-led-diffused-400mcd-30) with an 820R resistor, however you *must* to use a larger resistor value with high brightness LED, or you'll end up with a front panel too bright to be usable.
I have personally used 400mcd LED like the one [here](https://www.switchelectronics.co.uk/blue-5mm-led-diffused-400mcd-30) with an 820R resistor, however you *must* use a larger resistor value with high brightness LED, or you'll end up with a front panel too bright to be usable.

I strongly suggest to buy decent quality one and test all of them before mouting: undoing the LED installation can be a painful job.

#### Audio Jack

 BIN +16